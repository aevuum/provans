// // scripts/check-admin-password.ts
// import { prisma } from '../src/lib/prisma';
// import * as bcrypt from 'bcryptjs';

// async function main() {
//   try {
//     const user = await prisma.user.findFirst({
//       where: {
//         OR: [
//           { username: 'admin@provans.ru' },
//           { email: 'admin@provans.ru' }
//         ]
//       }
//     });
    
//     if (!user) {
//       console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å email admin@provans.ru –Ω–µ –Ω–∞–π–¥–µ–Ω');
//       return;
//     }
    
//     console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:');
//     console.log('ID:', user.id);
//     console.log('Username:', user.username);
//     console.log('Email:', user.email);
//     console.log('Role:', user.role);
//     console.log('Password hash:', user.password);
    
//     // –ü—Ä–æ–≤–µ—Ä–∏–º –ø–∞—Ä–æ–ª—å 'provans'
//     const isValidProvans = await bcrypt.compare('provans', user.password || '');
//     console.log('\nüîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª–µ–π:');
//     console.log('–ü–∞—Ä–æ–ª—å "provans" –ø–æ–¥—Ö–æ–¥–∏—Ç:', isValidProvans ? '‚úÖ –î–ê' : '‚ùå –ù–ï–¢');
    
//     // –ü—Ä–æ–≤–µ—Ä–∏–º –ø–∞—Ä–æ–ª—å 'admin123' 
//     const isValidAdmin123 = await bcrypt.compare('admin123', user.password || '');
//     console.log('–ü–∞—Ä–æ–ª—å "admin123" –ø–æ–¥—Ö–æ–¥–∏—Ç:', isValidAdmin123 ? '‚úÖ –î–ê' : '‚ùå –ù–ï–¢');
    
//   } catch (error) {
//     console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
//   } finally {
//     await prisma.$disconnect();
//   }
// }

// main();
