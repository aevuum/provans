import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function checkLampProducts() {
  try {
    console.log('üîç –ò—â–µ–º —Ç–æ–≤–∞—Ä—ã —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º "–ª–∞–º–ø–∞"...\n');
    
    // –ò—â–µ–º —Ç–æ–≤–∞—Ä—ã —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º "–ª–∞–º–ø–∞"
    const lampProducts = await prisma.product.findMany({
      where: {
        title: {
          contains: '–ª–∞–º–ø–∞',
          mode: 'insensitive'
        }
      },
      select: {
        id: true,
        title: true,
        image: true,
        images: true
      },
      orderBy: { id: 'asc' }
    });
    
    console.log(`–ù–∞–π–¥–µ–Ω–æ ${lampProducts.length} —Ç–æ–≤–∞—Ä–æ–≤ —Å–æ —Å–ª–æ–≤–æ–º "–ª–∞–º–ø–∞":\n`);
    
    lampProducts.forEach((product, index) => {
      console.log(`${index + 1}. –¢–æ–≤–∞—Ä ID ${product.id}: "${product.title}"`);
      console.log(`   image: ${product.image || '–ù–ï–¢'}`);
      console.log(`   images: ${product.images ? JSON.stringify(product.images) : '–ù–ï–¢'}`);
      console.log('');
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
    const fs = require('fs');
    const path = require('path');
    
    const photoDir = path.join(process.cwd(), 'public', '–§–û–¢–û');
    const photoFiles = fs.readdirSync(photoDir);
    
    console.log('üñºÔ∏è –ò—â–µ–º —Ñ–æ—Ç–æ —Å–æ —Å–ª–æ–≤–æ–º "–ª–∞–º–ø–∞" –≤ –ø–∞–ø–∫–µ –§–û–¢–û:\n');
    
    const lampPhotos = photoFiles.filter((file: string) => 
      file.toLowerCase().includes('–ª–∞–º–ø–∞') || 
      file.toLowerCase().includes('—Å–≤–µ—Ç–∏–ª') ||
      file.toLowerCase().includes('—Å–≤–µ—Ç')
    );
    
    if (lampPhotos.length > 0) {
      lampPhotos.forEach((photo: string, index: number) => {
        console.log(`${index + 1}. ${photo}`);
      });
    } else {
      console.log('‚ùå –§–æ—Ç–æ —Å–æ —Å–ª–æ–≤–æ–º "–ª–∞–º–ø–∞", "—Å–≤–µ—Ç–∏–ª" –∏–ª–∏ "—Å–≤–µ—Ç" –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
    }
    
    console.log('\nüéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
    console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ –ø–∞–ø–∫–µ public/–§–û–¢–û');
    console.log('2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ —Ç–æ—á–Ω–æ —Å–æ–≤–ø–∞–¥–∞—é—Ç —Å –∏–º–µ–Ω–∞–º–∏ —Ñ–∞–π–ª–æ–≤');
    console.log('3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç PhotoMatchingComponent –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–∏–≤—è–∑–∫–∏');
    console.log('4. –ò–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ –≤—Ä—É—á–Ω—É—é —á–µ—Ä–µ–∑ PhotoUploader');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    await prisma.$disconnect();
  }
}

checkLampProducts();
