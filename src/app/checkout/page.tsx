'use client';

import { useState } from 'react';
import { useAppSelector, useAppDispatch } from '@/lib/hooks';
import { clearCart } from '@/lib/features/cart/cartSlice';
import { addNotification } from '@/lib/features/notifications/notificationSlice';
import { CheckoutFormData } from '@/types/order';
import { FaShoppingCart, FaCreditCard, FaTruck, FaMapMarkerAlt } from 'react-icons/fa';
import Image from 'next/image';
import { getProductImage } from '@/types';
import { useRouter } from 'next/navigation';

export default function CheckoutPage() {
  const router = useRouter();
  const dispatch = useAppDispatch();
  const cart = useAppSelector((state) => state.cart.items);
  
  const [loading, setLoading] = useState(false);
  const [orderComplete, setOrderComplete] = useState(false);
  const [orderNumber, setOrderNumber] = useState('');
  
  const [formData, setFormData] = useState<CheckoutFormData>({
    firstName: '',
    lastName: '',
    email: '',
    phone: '',
    address: '',
    city: '',
    postalCode: '',
    region: '',
    shippingMethod: 'courier',
    paymentMethod: 'card',
    notes: ''
  });

  const [errors, setErrors] = useState<Partial<CheckoutFormData>>({});

  // –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏
  const subtotal = cart.reduce((sum, item) => sum + item.price * (item.count || 1), 0);
  // –î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –í–ª–∞–¥–∏–º–∏—Ä—É ‚Äî 350 ‚ÇΩ, –ø–æ –†–æ—Å—Å–∏–∏ ‚Äî –æ—Ç 300 ‚ÇΩ (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ä–µ–≥–∏–æ–Ω–∞ –∏ –≤–µ—Å–∞)
  // –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –∏ –ø–æ—Ä–æ–≥ —É–±—Ä–∞–Ω—ã
  const shippingCost = 350;
  const total = subtotal + shippingCost;

  // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã
  const validateForm = (): boolean => {
    const newErrors: Partial<CheckoutFormData> = {};
    
    if (!formData.firstName.trim()) newErrors.firstName = '–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ';
    if (!formData.lastName.trim()) newErrors.lastName = '–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ';
    if (!formData.email.trim()) newErrors.email = '–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ';
    if (!formData.phone.trim()) newErrors.phone = '–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ';
    if (!formData.address.trim()) newErrors.address = '–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ';
    if (!formData.city.trim()) newErrors.city = '–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ';
    
    if (formData.email && !/\S+@\S+\.\S+/.test(formData.email)) {
      newErrors.email = '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email';
    }
    
    if (formData.phone && !/^[+]?[0-9\s\-\(\)]{10,}$/.test(formData.phone)) {
      newErrors.phone = '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–∞';
    }

    setErrors(newErrors);
    return Object.keys(newErrors).length === 0;
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!validateForm()) return;
    if (cart.length === 0) return;

    setLoading(true);

    try {
      // –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑
      const orderResponse = await fetch('/api/orders', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          customerName: `${formData.firstName} ${formData.lastName}`,
          customerEmail: formData.email,
          customerPhone: formData.phone,
          customerAddress: `${formData.address}, ${formData.city}, ${formData.postalCode}, ${formData.region}`,
          shippingMethod: formData.shippingMethod,
          paymentMethod: formData.paymentMethod,
          notes: formData.notes,
          items: cart.map(item => ({
            productId: item.id,
            quantity: item.count || 1,
            price: item.price
          }))
        })
      });

      const orderResult = await orderResponse.json();

      if (orderResult.success) {
        const order = orderResult.order;
        
        // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞ –æ–ø–ª–∞—Ç–∞ –∫–∞—Ä—Ç–æ–π, —Å–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂
        if (formData.paymentMethod === 'card') {
          const paymentResponse = await fetch('/api/payments/create', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              amount: total,
              orderId: order.orderNumber,
              customerEmail: formData.email,
              returnUrl: typeof window !== 'undefined' 
                ? `${window.location.origin}/checkout/success`
                : '/checkout/success'
            })
          });

          const paymentResult = await paymentResponse.json();

          if (paymentResult.success) {
            // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã
            if (typeof window !== 'undefined') {
              window.location.href = paymentResult.payment.confirmation.confirmation_url;
            }
            return;
          } else {
            throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞');
          }
        } else {
          // –î–ª—è –¥—Ä—É–≥–∏—Ö –º–µ—Ç–æ–¥–æ–≤ –æ–ø–ª–∞—Ç—ã - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ
          setOrderNumber(order.orderNumber);
          setOrderComplete(true);
          dispatch(clearCart());
          dispatch(addNotification({
            type: 'success',
            message: `–ó–∞–∫–∞–∑ ‚Ññ${order.orderNumber} —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω!`
          }));
        }
      } else {
        dispatch(addNotification({
          type: 'error',
          message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞: ' + orderResult.error
        }));
      }
    } catch (_error) {
      console.error('Checkout error:', _error);
      dispatch(addNotification({
        type: 'error',
        message: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞'
      }));
    } finally {
      setLoading(false);
    }
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã
  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target;
    setFormData(prev => ({ ...prev, [name]: value }));
    
    // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫—É –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–ª—è
    if (errors[name as keyof CheckoutFormData]) {
      setErrors(prev => ({ ...prev, [name]: undefined }));
    }
  };

  // –ï—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞
  if (cart.length === 0 && !orderComplete) {
    return (
      <div className="container mx-auto px-4 py-8">
        <div className="text-center">
          <FaShoppingCart className="mx-auto text-6xl text-gray-300 mb-4" />
          <h1 className="text-2xl font-bold mb-4">–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</h1>
          <p className="text-gray-600 mb-6">–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω—É –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞</p>
          <button
            onClick={() => router.push('/catalog/–≤—Å–µ-–∫–∞—Ç–µ–≥–æ—Ä–∏–∏')}
            className="bg-[#B8835A] text-white px-6 py-3 rounded-lg hover:bg-[#9d6e47] transition-colors"
          >
            –ü–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ–∫—É–ø–∫–∞–º
          </button>
        </div>
      </div>
    );
  }

  // –°—Ç—Ä–∞–Ω–∏—Ü–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞
  if (orderComplete) {
    return (
      <div className="container mx-auto px-4 py-8">
        <div className="max-w-2xl mx-auto text-center">
          <div className="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded-lg mb-6">
            <h1 className="text-2xl font-bold mb-2">üéâ –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω!</h1>
            <p className="text-lg">–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: <strong>{orderNumber}</strong></p>
          </div>
          
          <div className="bg-white rounded-lg shadow-md p-6 mb-6">
            <h2 className="text-xl font-semibold mb-4">–ß—Ç–æ –¥–∞–ª—å—à–µ?</h2>
            <div className="space-y-3 text-left">
              <p>üìß –ù–∞ –≤–∞—à email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞</p>
              <p>üìû –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 2 —á–∞—Å–æ–≤ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è</p>
              <p>üì¶ –ó–∞–∫–∞–∑ –±—É–¥–µ—Ç —Å–æ–±—Ä–∞–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —Ç–µ—á–µ–Ω–∏–µ 1-2 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π</p>
              <p>üöö –í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä–æ–º –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è</p>
            </div>
          </div>

          <div className="flex gap-4 justify-center">
            <button
              onClick={() => router.push('/catalog/–≤—Å–µ-–∫–∞—Ç–µ–≥–æ—Ä–∏–∏')}
              className="bg-[#B8835A] text-white px-6 py-3 rounded-lg hover:bg-[#9d6e47] transition-colors"
            >
              –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∫—É–ø–∫–∏
            </button>
            <button
              onClick={() => router.push('/profile')}
              className="bg-gray-500 text-white px-6 py-3 rounded-lg hover:bg-gray-600 transition-colors"
            >
              –ú–æ–∏ –∑–∞–∫–∞–∑—ã
            </button>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="container mx-auto px-4 py-8">
      <h1 className="text-3xl font-bold mb-8 text-center">–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞</h1>
      
      <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
        {/* –§–æ—Ä–º–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è */}
        <div className="lg:col-span-2">
          <form onSubmit={handleSubmit} className="space-y-6">
            
            {/* –õ–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
            <div className="bg-white rounded-lg shadow-md p-6">
              <h2 className="text-xl font-semibold mb-4 flex items-center">
                <FaMapMarkerAlt className="mr-2 text-[#B8835A]" />
                –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
              </h2>
              
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    –ò–º—è *
                  </label>
                  <input
                    type="text"
                    name="firstName"
                    value={formData.firstName}
                    onChange={handleChange}
                    className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-[#B8835A] ${
                      errors.firstName ? 'border-red-500' : 'border-gray-300'
                    }`}
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è"
                  />
                  {errors.firstName && <p className="text-red-500 text-xs mt-1">{errors.firstName}</p>}
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    –§–∞–º–∏–ª–∏—è *
                  </label>
                  <input
                    type="text"
                    name="lastName"
                    value={formData.lastName}
                    onChange={handleChange}
                    className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-[#B8835A] ${
                      errors.lastName ? 'border-red-500' : 'border-gray-300'
                    }`}
                    placeholder="–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é"
                  />
                  {errors.lastName && <p className="text-red-500 text-xs mt-1">{errors.lastName}</p>}
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    Email *
                  </label>
                  <input
                    type="email"
                    name="email"
                    value={formData.email}
                    onChange={handleChange}
                    className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-[#B8835A] ${
                      errors.email ? 'border-red-500' : 'border-gray-300'
                    }`}
                    placeholder="example@mail.com"
                  />
                  {errors.email && <p className="text-red-500 text-xs mt-1">{errors.email}</p>}
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    –¢–µ–ª–µ—Ñ–æ–Ω *
                  </label>
                  <input
                    type="tel"
                    name="phone"
                    value={formData.phone}
                    onChange={handleChange}
                    className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-[#B8835A] ${
                      errors.phone ? 'border-red-500' : 'border-gray-300'
                    }`}
                    placeholder="+7 (999) 123-45-67"
                  />
                  {errors.phone && <p className="text-red-500 text-xs mt-1">{errors.phone}</p>}
                </div>
              </div>
            </div>

            {/* –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ */}
            <div className="bg-white rounded-lg shadow-md p-6">
              <h2 className="text-xl font-semibold mb-4 flex items-center">
                <FaTruck className="mr-2 text-[#B8835A]" />
                –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏
              </h2>
              
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div className="md:col-span-2">
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    –ê–¥—Ä–µ—Å *
                  </label>
                  <input
                    type="text"
                    name="address"
                    value={formData.address}
                    onChange={handleChange}
                    className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-[#B8835A] ${
                      errors.address ? 'border-red-500' : 'border-gray-300'
                    }`}
                    placeholder="–£–ª–∏—Ü–∞, –¥–æ–º, –∫–≤–∞—Ä—Ç–∏—Ä–∞"
                  />
                  {errors.address && <p className="text-red-500 text-xs mt-1">{errors.address}</p>}
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    –ì–æ—Ä–æ–¥ *
                  </label>
                  <input
                    type="text"
                    name="city"
                    value={formData.city}
                    onChange={handleChange}
                    className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-[#B8835A] ${
                      errors.city ? 'border-red-500' : 'border-gray-300'
                    }`}
                    placeholder="–í–ª–∞–¥–∏–º–∏—Ä"
                  />
                  {errors.city && <p className="text-red-500 text-xs mt-1">{errors.city}</p>}
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    –ò–Ω–¥–µ–∫—Å
                  </label>
                  <input
                    type="text"
                    name="postalCode"
                    value={formData.postalCode}
                    onChange={handleChange}
                    className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#B8835A]"
                    placeholder="123456"
                  />
                </div>
                
                <div className="md:col-span-2">
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    –†–µ–≥–∏–æ–Ω
                  </label>
                  <input
                    type="text"
                    name="region"
                    value={formData.region}
                    onChange={handleChange}
                    className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#B8835A]"
                    placeholder="–í–ª–∞–¥–∏–º–∏—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"
                  />
                </div>
              </div>
            </div>

            {/* –°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏ –∏ –æ–ø–ª–∞—Ç—ã */}
            <div className="bg-white rounded-lg shadow-md p-6">
              <h2 className="text-xl font-semibold mb-4 flex items-center">
                <FaCreditCard className="mr-2 text-[#B8835A]" />
                –î–æ—Å—Ç–∞–≤–∫–∞ –∏ –æ–ø–ª–∞—Ç–∞
              </h2>
              
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏
                  </label>
                  <div className="space-y-2">
                    <label className="flex items-center">
                      <input
                        type="radio"
                        name="shippingMethod"
                        value="courier"
                        checked={formData.shippingMethod === 'courier'}
                        onChange={handleChange}
                        className="mr-2"
                      />
                      <span>–ö—É—Ä—å–µ—Ä—Å–∫–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞</span>
                    </label>
                    <label className="flex items-center">
                      <input
                        type="radio"
                        name="shippingMethod"
                        value="pickup"
                        checked={formData.shippingMethod === 'pickup'}
                        onChange={handleChange}
                        className="mr-2"
                      />
                      <span>–°–∞–º–æ–≤—ã–≤–æ–∑</span>
                    </label>
                    <label className="flex items-center">
                      <input
                        type="radio"
                        name="shippingMethod"
                        value="post"
                        checked={formData.shippingMethod === 'post'}
                        onChange={handleChange}
                        className="mr-2"
                      />
                      <span>–ü–æ—á—Ç–∞ –†–æ—Å—Å–∏–∏</span>
                    </label>
                  </div>
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã
                  </label>
                  <div className="space-y-2">
                    <label className="flex items-center">
                      <input
                        type="radio"
                        name="paymentMethod"
                        value="card"
                        checked={formData.paymentMethod === 'card'}
                        onChange={handleChange}
                        className="mr-2"
                      />
                      <span>–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞</span>
                    </label>
                    <label className="flex items-center">
                      <input
                        type="radio"
                        name="paymentMethod"
                        value="online"
                        checked={formData.paymentMethod === 'online'}
                        onChange={handleChange}
                        className="mr-2"
                      />
                      <span>–û–Ω–ª–∞–π–Ω-–ø–ª–∞—Ç–µ–∂</span>
                    </label>
                    <label className="flex items-center">
                      <input
                        type="radio"
                        name="paymentMethod"
                        value="cash"
                        checked={formData.paymentMethod === 'cash'}
                        onChange={handleChange}
                        className="mr-2"
                      />
                      <span>–ù–∞–ª–∏—á–Ω—ã–µ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏</span>
                    </label>
                  </div>
                </div>
              </div>
              
              <div className="mt-4">
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–∫–∞–∑—É
                </label>
                <textarea
                  name="notes"
                  value={formData.notes}
                  onChange={handleChange}
                  rows={3}
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#B8835A]"
                  placeholder="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è –∏–ª–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏"
                />
              </div>
            </div>

            {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ */}
            <button
              type="submit"
              disabled={loading}
              className="w-full bg-[#B8835A] text-white py-4 rounded-lg font-bold text-lg hover:bg-[#9d6e47] transition-colors disabled:opacity-50 disabled:cursor-not-allowed"
            >
              {loading ? '–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞...' : '–û–§–û–†–ú–ò–¢–¨ –ó–ê–ö–ê–ó'}
            </button>
          </form>
        </div>

        {/* –°–≤–æ–¥–∫–∞ –∑–∞–∫–∞–∑–∞ */}
        <div className="lg:col-span-1">
          <div className="bg-white rounded-lg shadow-md p-6 sticky top-4">
            <h2 className="text-xl font-semibold mb-4">–í–∞—à –∑–∞–∫–∞–∑</h2>
            
            {/* –¢–æ–≤–∞—Ä—ã */}
            <div className="space-y-3 mb-4 max-h-60 overflow-y-auto">
              {cart.map((item) => {
                const mainImage = getProductImage(item);
                return (
                  <div key={item.id} className="flex items-center space-x-3">
                    <div className="w-12 h-12 bg-gray-100 rounded overflow-hidden flex-shrink-0">
                      <Image
                        src={mainImage}
                        alt={item.title}
                        width={48}
                        height={48}
                        className="w-full h-full object-cover"
                      />
                    </div>
                    <div className="flex-1 min-w-0">
                      <p className="text-sm font-medium truncate">{item.title}</p>
                      <p className="text-xs text-gray-500">
                        {item.count || 1} √ó {item.price.toLocaleString('ru-RU')} ‚ÇΩ
                      </p>
                    </div>
                    <p className="text-sm font-bold">
                      {(item.price * (item.count || 1)).toLocaleString('ru-RU')} ‚ÇΩ
                    </p>
                  </div>
                );
              })}
            </div>
            
            {/* –ò—Ç–æ–≥–∏ */}
            <div className="border-t pt-4 space-y-2">
              <div className="flex justify-between">
                <span>–¢–æ–≤–∞—Ä—ã:</span>
                <span>{subtotal.toLocaleString('ru-RU')} ‚ÇΩ</span>
              </div>
              <div className="flex justify-between">
                <span>–î–æ—Å—Ç–∞–≤–∫–∞:</span>
                <span>{shippingCost.toLocaleString('ru-RU')} ‚ÇΩ</span>
              </div>
              <div className="flex justify-between font-bold text-lg border-t pt-2">
                <span>–ò—Ç–æ–≥–æ:</span>
                <span>{total.toLocaleString('ru-RU')} ‚ÇΩ</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}
