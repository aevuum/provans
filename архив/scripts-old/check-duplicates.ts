import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function checkDuplicates() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤...');
  
  try {
    // SQL –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –Ω–∞–∑–≤–∞–Ω–∏–π
    const duplicates = await prisma.$queryRaw<Array<{title: string, count: bigint}>>`
      SELECT title, COUNT(*) as count 
      FROM "Product" 
      WHERE title IS NOT NULL 
      GROUP BY title 
      HAVING COUNT(*) > 1 
      ORDER BY count DESC
    `;
    
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –≥—Ä—É–ø–ø —Å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏: ${duplicates.length}`);
    
    for (const dup of duplicates) {
      console.log(`\nüìù "${dup.title}" - ${dup.count} —Ç–æ–≤–∞—Ä–æ–≤`);
      
      // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã —Å —ç—Ç–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º
      const products = await prisma.product.findMany({
        where: { title: dup.title },
        select: { id: true, title: true, image: true, images: true },
        orderBy: { id: 'asc' }
      });
      
      products.forEach((product, index) => {
        console.log(`  ID ${product.id}: ${product.image || '–ù–ï–¢ –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø'}`);
      });
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    console.log('\nüè∑Ô∏è –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...');
    const categories = await prisma.category.findMany({
      select: { id: true, name: true, slug: true, isActive: true }
    });
    
    console.log('–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:');
    categories.forEach(cat => {
      console.log(`  ${cat.slug} (${cat.name}) - ${cat.isActive ? '–∞–∫—Ç–∏–≤–Ω–∞' : '–Ω–µ–∞–∫—Ç–∏–≤–Ω–∞'}`);
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–≤–∞—Ä—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    console.log('\nüì¶ –¢–æ–≤–∞—Ä—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:');
    const categoryStats = await prisma.$queryRaw<Array<{category: string, count: bigint}>>`
      SELECT category, COUNT(*) as count 
      FROM "Product" 
      WHERE category IS NOT NULL 
      GROUP BY category 
      ORDER BY count DESC
    `;
    
    categoryStats.forEach(stat => {
      console.log(`  ${stat.category}: ${stat.count} —Ç–æ–≤–∞—Ä–æ–≤`);
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    await prisma.$disconnect();
  }
}

checkDuplicates();
